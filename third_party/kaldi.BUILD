# TODO(rkjaran): Kaldi defaults to compiling a debug build.  Need to compile it
#                with -DNDEBUG -O3 -g0 to get a much faster and smaller library
package(
    default_visibility = ["//visibility:public"],
)

load("@rules_foreign_cc//tools/build_defs:make.bzl", "make")

filegroup(
    name = "all",
    srcs = glob(["**"]),
)

# Kaldi
#
# TODO(rkjaran): Split up the kaldi subdirs so we don't have to depend on and
#                build everything. (Or, perhaps we'll just grab kaldi into the tree
#                and write a BUILD file)
kaldi_configure_opts = [
    "--static",
    "--static-fst",
    "--fst-root=$$EXT_BUILD_DEPS$$/openfst",
    "--fst-version=1.6.7",  # TODO: obtain from WORKSPACE
    "--static-math",
    "--mathlib=OPENBLAS",
    "--openblas-root=$$EXT_BUILD_DEPS$$/openblas",
    "--use-cuda=no",
]

kaldi_static_libraries = [
    "base/kaldi-base.a",
    "chain/kaldi-chain.a",
    "cudadecoder/kaldi-cudadecoder.a",
    "cudafeat/kaldi-cudafeat.a",
    "cudamatrix/kaldi-cudamatrix.a",
    "decoder/kaldi-decoder.a",
    "feat/kaldi-feat.a",
    "fstext/kaldi-fstext.a",
    "gmm/kaldi-gmm.a",
    "hmm/kaldi-hmm.a",
    "ivector/kaldi-ivector.a",
    "kws/kaldi-kws.a",
    "lat/kaldi-lat.a",
    "lm/kaldi-lm.a",
    "matrix/kaldi-matrix.a",
    "nnet/kaldi-nnet.a",
    "nnet2/kaldi-nnet2.a",
    "nnet3/kaldi-nnet3.a",
    "online2/kaldi-online2.a",
    "rnnlm/kaldi-rnnlm.a",
    "sgmm2/kaldi-sgmm2.a",
    "transform/kaldi-transform.a",
    "tree/kaldi-tree.a",
    "util/kaldi-util.a",
]

kaldi_binaries = [
    "bin/acc-tree-stats",
    "bin/add-self-loops",
    "bin/ali-to-pdf",
    "bin/ali-to-phones",
    "bin/ali-to-post",
    "bin/align-compiled-mapped",
    "bin/align-equal-compiled",
    "bin/align-equal",
    "bin/align-mapped",
    "bin/align-text",
    "bin/am-info",
    "bin/analyze-counts",
    "bin/build-pfile-from-ali",
    "bin/build-tree-two-level",
    "bin/build-tree",
    "bin/cluster-phones",
    "bin/compare-int-vector",
    "bin/compile-graph",
    "bin/compile-questions",
    "bin/compile-train-graphs-fsts",
    "bin/compile-train-graphs",
    "bin/compute-gop",
    "bin/compute-wer-bootci",
    "bin/compute-wer",
    "bin/convert-ali",
    "bin/copy-gselect",
    "bin/copy-int-vector",
    "bin/copy-matrix",
    "bin/copy-post",
    "bin/copy-transition-model",
    "bin/copy-tree",
    "bin/copy-vector",
    "bin/decode-faster-mapped",
    "bin/decode-faster",
    "bin/draw-tree",
    "bin/est-lda",
    "bin/est-mllt",
    "bin/est-pca",
    "bin/get-post-on-ali",
    "bin/hmm-info",
    "bin/latgen-faster-mapped-parallel",
    "bin/latgen-faster-mapped",
    "bin/latgen-incremental-mapped",
    "bin/logprob-to-post",
    "bin/make-h-transducer",
    "bin/make-ilabel-transducer",
    "bin/make-pdf-to-tid-transducer",
    "bin/matrix-dim",
    "bin/matrix-sum-rows",
    "bin/matrix-sum",
    "bin/phones-to-prons",
    "bin/post-to-pdf-post",
    "bin/post-to-phone-post",
    "bin/post-to-smat",
    "bin/post-to-tacc",
    "bin/post-to-weights",
    "bin/prob-to-post",
    "bin/prons-to-wordali",
    "bin/scale-post",
    "bin/show-alignments",
    "bin/show-transitions",
    "bin/sum-lda-accs",
    "bin/sum-matrices",
    "bin/sum-mllt-accs",
    "bin/sum-post",
    "bin/sum-tree-stats",
    "bin/transform-vec",
    "bin/tree-info",
    "bin/vector-scale",
    "bin/vector-sum",
    "bin/weight-post",
    "bin/weight-silence-post",
    "chainbin/chain-est-phone-lm",
    "chainbin/chain-get-supervision",
    "chainbin/chain-make-den-fst",
    "chainbin/nnet3-chain-acc-lda-stats",
    "chainbin/nnet3-chain-combine",
    "chainbin/nnet3-chain-compute-post",
    "chainbin/nnet3-chain-compute-prob",
    "chainbin/nnet3-chain-copy-egs",
    "chainbin/nnet3-chain-e2e-get-egs",
    "chainbin/nnet3-chain-get-egs",
    "chainbin/nnet3-chain-merge-egs",
    "chainbin/nnet3-chain-normalize-egs",
    "chainbin/nnet3-chain-shuffle-egs",
    "chainbin/nnet3-chain-subset-egs",
    "chainbin/nnet3-chain-train",
    "cudadecoderbin/batched-wav-nnet3-cuda",
    "cudafeatbin/apply-cmvn-online-cuda",
    "cudafeatbin/compute-fbank-feats-cuda",
    "cudafeatbin/compute-mfcc-feats-cuda",
    "cudafeatbin/compute-online-feats-cuda",
    "featbin/add-deltas-sdc",
    "featbin/add-deltas",
    "featbin/append-post-to-feats",
    "featbin/append-vector-to-feats",
    "featbin/apply-cmvn-sliding",
    "featbin/apply-cmvn",
    "featbin/compare-feats",
    "featbin/compose-transforms",
    "featbin/compute-and-process-kaldi-pitch-feats",
    "featbin/compute-cmvn-stats-two-channel",
    "featbin/compute-cmvn-stats",
    "featbin/compute-fbank-feats",
    "featbin/compute-kaldi-pitch-feats",
    "featbin/compute-mfcc-feats",
    "featbin/compute-plp-feats",
    "featbin/compute-spectrogram-feats",
    "featbin/concat-feats",
    "featbin/copy-feats-to-htk",
    "featbin/copy-feats-to-sphinx",
    "featbin/copy-feats",
    "featbin/extend-transform-dim",
    "featbin/extract-feature-segments",
    "featbin/extract-segments",
    "featbin/feat-to-dim",
    "featbin/feat-to-len",
    "featbin/fmpe-acc-stats",
    "featbin/fmpe-apply-transform",
    "featbin/fmpe-est",
    "featbin/fmpe-init",
    "featbin/fmpe-sum-accs",
    "featbin/get-full-lda-mat",
    "featbin/interpolate-pitch",
    "featbin/modify-cmvn-stats",
    "featbin/paste-feats",
    "featbin/post-to-feats",
    "featbin/process-kaldi-pitch-feats",
    "featbin/process-pitch-feats",
    "featbin/select-feats",
    "featbin/shift-feats",
    "featbin/splice-feats",
    "featbin/subsample-feats",
    "featbin/subset-feats",
    "featbin/transform-feats",
    "featbin/wav-copy",
    "featbin/wav-reverberate",
    "featbin/wav-to-duration",
    "fgmmbin/fgmm-global-acc-stats-post",
    "fgmmbin/fgmm-global-acc-stats",
    "fgmmbin/fgmm-global-copy",
    "fgmmbin/fgmm-global-est",
    "fgmmbin/fgmm-global-get-frame-likes",
    "fgmmbin/fgmm-global-gselect-to-post",
    "fgmmbin/fgmm-global-info",
    "fgmmbin/fgmm-global-init-from-accs",
    "fgmmbin/fgmm-global-merge",
    "fgmmbin/fgmm-global-sum-accs",
    "fgmmbin/fgmm-global-to-gmm",
    "fgmmbin/fgmm-gselect",
    "fstbin/fstaddselfloops",
    "fstbin/fstaddsubsequentialloop",
    "fstbin/fstcomposecontext",
    "fstbin/fstcopy",
    "fstbin/fstdeterminizelog",
    "fstbin/fstdeterminizestar",
    "fstbin/fstisstochastic",
    "fstbin/fstmakecontextfst",
    "fstbin/fstmakecontextsyms",
    "fstbin/fstminimizeencoded",
    "fstbin/fstphicompose",
    "fstbin/fstpushspecial",
    "fstbin/fstrand",
    "fstbin/fstrmepslocal",
    "fstbin/fstrmsymbols",
    "fstbin/fsts-concat",
    "fstbin/fsts-project",
    "fstbin/fsts-to-transcripts",
    "fstbin/fsts-union",
    "fstbin/fsttablecompose",
    "fstbin/make-grammar-fst",
    "gmmbin/gmm-acc-mllt-global",
    "gmmbin/gmm-acc-mllt",
    "gmmbin/gmm-acc-stats-ali",
    "gmmbin/gmm-acc-stats-twofeats",
    "gmmbin/gmm-acc-stats",
    "gmmbin/gmm-acc-stats2",
    "gmmbin/gmm-adapt-map",
    "gmmbin/gmm-align-compiled",
    "gmmbin/gmm-align",
    "gmmbin/gmm-basis-fmllr-accs-gpost",
    "gmmbin/gmm-basis-fmllr-accs",
    "gmmbin/gmm-basis-fmllr-training",
    "gmmbin/gmm-boost-silence",
    "gmmbin/gmm-compute-likes",
    "gmmbin/gmm-copy",
    "gmmbin/gmm-decode-biglm-faster",
    "gmmbin/gmm-decode-faster-regtree-fmllr",
    "gmmbin/gmm-decode-faster-regtree-mllr",
    "gmmbin/gmm-decode-faster",
    "gmmbin/gmm-decode-simple",
    "gmmbin/gmm-est-basis-fmllr-gpost",
    "gmmbin/gmm-est-basis-fmllr",
    "gmmbin/gmm-est-fmllr-global",
    "gmmbin/gmm-est-fmllr-gpost",
    "gmmbin/gmm-est-fmllr-raw-gpost",
    "gmmbin/gmm-est-fmllr-raw",
    "gmmbin/gmm-est-fmllr",
    "gmmbin/gmm-est-gaussians-ebw",
    "gmmbin/gmm-est-lvtln-trans",
    "gmmbin/gmm-est-map",
    "gmmbin/gmm-est-regtree-fmllr-ali",
    "gmmbin/gmm-est-regtree-fmllr",
    "gmmbin/gmm-est-regtree-mllr",
    "gmmbin/gmm-est-rescale",
    "gmmbin/gmm-est-weights-ebw",
    "gmmbin/gmm-est",
    "gmmbin/gmm-fmpe-acc-stats",
    "gmmbin/gmm-get-stats-deriv",
    "gmmbin/gmm-global-acc-stats-twofeats",
    "gmmbin/gmm-global-acc-stats",
    "gmmbin/gmm-global-copy",
    "gmmbin/gmm-global-est-fmllr",
    "gmmbin/gmm-global-est-lvtln-trans",
    "gmmbin/gmm-global-est",
    "gmmbin/gmm-global-get-frame-likes",
    "gmmbin/gmm-global-get-post",
    "gmmbin/gmm-global-gselect-to-post",
    "gmmbin/gmm-global-info",
    "gmmbin/gmm-global-init-from-feats",
    "gmmbin/gmm-global-sum-accs",
    "gmmbin/gmm-global-to-fgmm",
    "gmmbin/gmm-gselect",
    "gmmbin/gmm-info",
    "gmmbin/gmm-init-biphone",
    "gmmbin/gmm-init-lvtln",
    "gmmbin/gmm-init-model-flat",
    "gmmbin/gmm-init-model",
    "gmmbin/gmm-init-mono",
    "gmmbin/gmm-ismooth-stats",
    "gmmbin/gmm-latgen-biglm-faster",
    "gmmbin/gmm-latgen-faster-parallel",
    "gmmbin/gmm-latgen-faster-regtree-fmllr",
    "gmmbin/gmm-latgen-faster",
    "gmmbin/gmm-latgen-map",
    "gmmbin/gmm-latgen-simple",
    "gmmbin/gmm-make-regtree",
    "gmmbin/gmm-mixup",
    "gmmbin/gmm-post-to-gpost",
    "gmmbin/gmm-rescore-lattice",
    "gmmbin/gmm-sum-accs",
    "gmmbin/gmm-train-lvtln-special",
    "gmmbin/gmm-transform-means-global",
    "gmmbin/gmm-transform-means",
    "ivectorbin/agglomerative-cluster",
    "ivectorbin/compute-eer",
    "ivectorbin/compute-vad-from-frame-likes",
    "ivectorbin/compute-vad",
    "ivectorbin/ivector-adapt-plda",
    "ivectorbin/ivector-compute-dot-products",
    "ivectorbin/ivector-compute-lda",
    "ivectorbin/ivector-compute-plda",
    "ivectorbin/ivector-copy-plda",
    "ivectorbin/ivector-extract-online",
    "ivectorbin/ivector-extract",
    "ivectorbin/ivector-extractor-acc-stats",
    "ivectorbin/ivector-extractor-copy",
    "ivectorbin/ivector-extractor-est",
    "ivectorbin/ivector-extractor-init",
    "ivectorbin/ivector-extractor-sum-accs",
    "ivectorbin/ivector-mean",
    "ivectorbin/ivector-normalize-length",
    "ivectorbin/ivector-plda-scoring-dense",
    "ivectorbin/ivector-plda-scoring",
    "ivectorbin/ivector-subtract-global-mean",
    "ivectorbin/ivector-transform",
    "ivectorbin/logistic-regression-copy",
    "ivectorbin/logistic-regression-eval",
    "ivectorbin/logistic-regression-train",
    "ivectorbin/merge-vads",
    "ivectorbin/select-voiced-frames",
    "kwsbin/compute-atwv",
    "kwsbin/generate-proxy-keywords",
    "kwsbin/kws-index-union",
    "kwsbin/kws-search",
    "kwsbin/lattice-to-kws-index",
    "kwsbin/print-proxy-keywords",
    "kwsbin/transcripts-to-fsts",
    "latbin/lattice-1best",
    "latbin/lattice-add-penalty",
    "latbin/lattice-add-trans-probs",
    "latbin/lattice-align-phones",
    "latbin/lattice-align-words-lexicon",
    "latbin/lattice-align-words",
    "latbin/lattice-arc-post",
    "latbin/lattice-best-path",
    "latbin/lattice-boost-ali",
    "latbin/lattice-combine",
    "latbin/lattice-compose",
    "latbin/lattice-confidence",
    "latbin/lattice-copy-backoff",
    "latbin/lattice-copy",
    "latbin/lattice-depth-per-frame",
    "latbin/lattice-depth",
    "latbin/lattice-determinize-non-compact",
    "latbin/lattice-determinize-phone-pruned-parallel",
    "latbin/lattice-determinize-phone-pruned",
    "latbin/lattice-determinize-pruned-parallel",
    "latbin/lattice-determinize-pruned",
    "latbin/lattice-determinize",
    "latbin/lattice-difference",
    "latbin/lattice-equivalent",
    "latbin/lattice-expand-ngram",
    "latbin/lattice-interp",
    "latbin/lattice-limit-depth",
    "latbin/lattice-lmrescore-const-arpa",
    "latbin/lattice-lmrescore-kaldi-rnnlm-pruned",
    "latbin/lattice-lmrescore-kaldi-rnnlm",
    "latbin/lattice-lmrescore-pruned",
    "latbin/lattice-lmrescore-rnnlm",
    "latbin/lattice-lmrescore",
    "latbin/lattice-mbr-decode",
    "latbin/lattice-minimize",
    "latbin/lattice-oracle",
    "latbin/lattice-project",
    "latbin/lattice-prune",
    "latbin/lattice-push",
    "latbin/lattice-rescore-mapped",
    "latbin/lattice-reverse",
    "latbin/lattice-rmali",
    "latbin/lattice-scale",
    "latbin/lattice-to-ctm-conf",
    "latbin/lattice-to-fst",
    "latbin/lattice-to-mpe-post",
    "latbin/lattice-to-nbest",
    "latbin/lattice-to-phone-lattice",
    "latbin/lattice-to-post",
    "latbin/lattice-to-smbr-post",
    "latbin/lattice-union",
    "latbin/linear-to-nbest",
    "latbin/nbest-to-ctm",
    "latbin/nbest-to-lattice",
    "latbin/nbest-to-linear",
    "latbin/nbest-to-prons",
    "lmbin/arpa-to-const-arpa",
    "lmbin/arpa2fst",
    "nnet2bin/nnet-adjust-priors",
    "nnet2bin/nnet-align-compiled",
    "nnet2bin/nnet-am-average",
    "nnet2bin/nnet-am-compute",
    "nnet2bin/nnet-am-copy",
    "nnet2bin/nnet-am-fix",
    "nnet2bin/nnet-am-info",
    "nnet2bin/nnet-am-init",
    "nnet2bin/nnet-am-mixup",
    "nnet2bin/nnet-am-reinitialize",
    "nnet2bin/nnet-am-switch-preconditioning",
    "nnet2bin/nnet-am-widen",
    "nnet2bin/nnet-combine-egs-discriminative",
    "nnet2bin/nnet-combine-fast",
    "nnet2bin/nnet-combine",
    "nnet2bin/nnet-compare-hash-discriminative",
    "nnet2bin/nnet-compute-from-egs",
    "nnet2bin/nnet-compute-prob",
    "nnet2bin/nnet-compute",
    "nnet2bin/nnet-copy-egs-discriminative",
    "nnet2bin/nnet-copy-egs",
    "nnet2bin/nnet-get-egs-discriminative",
    "nnet2bin/nnet-get-egs",
    "nnet2bin/nnet-get-feature-transform-multi",
    "nnet2bin/nnet-get-feature-transform",
    "nnet2bin/nnet-get-weighted-egs",
    "nnet2bin/nnet-init",
    "nnet2bin/nnet-insert",
    "nnet2bin/nnet-latgen-faster-parallel",
    "nnet2bin/nnet-latgen-faster",
    "nnet2bin/nnet-modify-learning-rates",
    "nnet2bin/nnet-normalize-stddev",
    "nnet2bin/nnet-relabel-egs",
    "nnet2bin/nnet-replace-last-layers",
    "nnet2bin/nnet-show-progress",
    "nnet2bin/nnet-shuffle-egs-discriminative",
    "nnet2bin/nnet-shuffle-egs",
    "nnet2bin/nnet-subset-egs",
    "nnet2bin/nnet-to-raw-nnet",
    "nnet2bin/nnet-train-discriminative-parallel",
    "nnet2bin/nnet-train-discriminative-simple",
    "nnet2bin/nnet-train-ensemble",
    "nnet2bin/nnet-train-parallel",
    "nnet2bin/nnet-train-simple",
    "nnet2bin/nnet-train-transitions",
    "nnet2bin/nnet1-to-raw-nnet",
    "nnet2bin/raw-nnet-concat",
    "nnet2bin/raw-nnet-copy",
    "nnet2bin/raw-nnet-info",
    "nnet3bin/cuda-compiled",
    "nnet3bin/cuda-gpu-available",
    "nnet3bin/nnet3-acc-lda-stats",
    "nnet3bin/nnet3-align-compiled",
    "nnet3bin/nnet3-am-adjust-priors",
    "nnet3bin/nnet3-am-copy",
    "nnet3bin/nnet3-am-info",
    "nnet3bin/nnet3-am-init",
    "nnet3bin/nnet3-am-train-transitions",
    "nnet3bin/nnet3-average",
    "nnet3bin/nnet3-combine",
    "nnet3bin/nnet3-compute-batch",
    "nnet3bin/nnet3-compute-from-egs",
    "nnet3bin/nnet3-compute-prob",
    "nnet3bin/nnet3-compute",
    "nnet3bin/nnet3-copy-egs",
    "nnet3bin/nnet3-copy",
    "nnet3bin/nnet3-discriminative-compute-from-egs",
    "nnet3bin/nnet3-discriminative-compute-objf",
    "nnet3bin/nnet3-discriminative-copy-egs",
    "nnet3bin/nnet3-discriminative-get-egs",
    "nnet3bin/nnet3-discriminative-merge-egs",
    "nnet3bin/nnet3-discriminative-shuffle-egs",
    "nnet3bin/nnet3-discriminative-subset-egs",
    "nnet3bin/nnet3-discriminative-train",
    "nnet3bin/nnet3-egs-augment-image",
    "nnet3bin/nnet3-get-egs-dense-targets",
    "nnet3bin/nnet3-get-egs-simple",
    "nnet3bin/nnet3-get-egs",
    "nnet3bin/nnet3-info",
    "nnet3bin/nnet3-init",
    "nnet3bin/nnet3-latgen-faster-batch",
    "nnet3bin/nnet3-latgen-faster-looped",
    "nnet3bin/nnet3-latgen-faster-parallel",
    "nnet3bin/nnet3-latgen-faster",
    "nnet3bin/nnet3-latgen-grammar",
    "nnet3bin/nnet3-merge-egs",
    "nnet3bin/nnet3-show-progress",
    "nnet3bin/nnet3-shuffle-egs",
    "nnet3bin/nnet3-subset-egs",
    "nnet3bin/nnet3-train",
    "nnet3bin/nnet3-xvector-compute-batched",
    "nnet3bin/nnet3-xvector-compute",
    "nnet3bin/nnet3-xvector-get-egs",
    "nnetbin/cmvn-to-nnet",
    "nnetbin/feat-to-post",
    "nnetbin/nnet-concat",
    "nnetbin/nnet-copy",
    "nnetbin/nnet-forward",
    "nnetbin/nnet-info",
    "nnetbin/nnet-initialize",
    "nnetbin/nnet-set-learnrate",
    "nnetbin/nnet-train-frmshuff",
    "nnetbin/nnet-train-mmi-sequential",
    "nnetbin/nnet-train-mpe-sequential",
    "nnetbin/nnet-train-multistream-perutt",
    "nnetbin/nnet-train-multistream",
    "nnetbin/nnet-train-perutt",
    "nnetbin/paste-post",
    "nnetbin/rbm-convert-to-nnet",
    "nnetbin/rbm-train-cd1-frmshuff",
    "nnetbin/train-transitions",
    "nnetbin/transf-to-nnet",
    "online2bin/apply-cmvn-online",
    "online2bin/compress-uncompress-speex",
    "online2bin/extend-wav-with-silence",
    "online2bin/ivector-extract-online2",
    "online2bin/ivector-randomize",
    "online2bin/online2-tcp-nnet3-decode-faster",
    "online2bin/online2-wav-dump-features",
    "online2bin/online2-wav-gmm-latgen-faster",
    "online2bin/online2-wav-nnet2-am-compute",
    "online2bin/online2-wav-nnet2-latgen-faster",
    "online2bin/online2-wav-nnet2-latgen-threaded",
    "online2bin/online2-wav-nnet3-latgen-faster",
    "online2bin/online2-wav-nnet3-latgen-grammar",
    "online2bin/online2-wav-nnet3-latgen-incremental",
    "onlinebin/online-audio-client",
    "onlinebin/online-audio-server-decode-faster",
    "onlinebin/online-gmm-decode-faster",
    "onlinebin/online-net-client",
    "onlinebin/online-server-gmm-decode-faster",
    "onlinebin/online-wav-gmm-decode-faster",
    "rnnlmbin/rnnlm-compute-prob",
    "rnnlmbin/rnnlm-get-egs",
    "rnnlmbin/rnnlm-get-sampling-lm",
    "rnnlmbin/rnnlm-get-word-embedding",
    "rnnlmbin/rnnlm-sentence-probs",
    "rnnlmbin/rnnlm-train",
    "sgmm2bin/init-ubm",
    "sgmm2bin/sgmm2-acc-stats-gpost",
    "sgmm2bin/sgmm2-acc-stats",
    "sgmm2bin/sgmm2-acc-stats2",
    "sgmm2bin/sgmm2-align-compiled",
    "sgmm2bin/sgmm2-comp-prexform",
    "sgmm2bin/sgmm2-copy",
    "sgmm2bin/sgmm2-est-ebw",
    "sgmm2bin/sgmm2-est-fmllr",
    "sgmm2bin/sgmm2-est-spkvecs-gpost",
    "sgmm2bin/sgmm2-est-spkvecs",
    "sgmm2bin/sgmm2-est",
    "sgmm2bin/sgmm2-gselect",
    "sgmm2bin/sgmm2-info",
    "sgmm2bin/sgmm2-init",
    "sgmm2bin/sgmm2-latgen-faster-parallel",
    "sgmm2bin/sgmm2-latgen-faster",
    "sgmm2bin/sgmm2-post-to-gpost",
    "sgmm2bin/sgmm2-project",
    "sgmm2bin/sgmm2-rescore-lattice",
    "sgmm2bin/sgmm2-sum-accs",
    "tfrnnlmbin/lattice-lmrescore-tf-rnnlm-pruned",
    "tfrnnlmbin/lattice-lmrescore-tf-rnnlm",
]

kaldi_libs = [
    # "kws",
    # "sgmm2",
    "rnnlm",
    "online2",
    "decoder",
    "lm",
    "nnet3",
    "chain",
    "nnet2",
    "nnet",
    "cudamatrix",
    "ivector",
    "lat",
    "hmm",
    "fstext",
    "feat",
    "transform",
    "gmm",
    "tree",
    "util",
    "matrix",
    "base",
]

make(
    name = "kaldi",
    # binaries = [
    #     bin.split("/")[1] for bin in kaldi_binaries
    # ],
    defines = [
        "KALDI_DOUBLEPRECISION=0",
        "HAVE_EXECINFO_H=0",
        "HAVE_CXXABI_H",
        "HAVE_OPENFST_GE_10600",
    ],
    lib_source = "@kaldi//:all",
    make_commands = [
        "./configure " + " ".join(kaldi_configure_opts),
        "make depend",
        "make " + " ".join(kaldi_libs),
        "cp " + " ".join([lib + "/kaldi-" + lib + ".a" for lib in kaldi_libs]) +
        " $$INSTALLDIR$$/lib/",
        "for lib in  " + " ".join(kaldi_libs) +
        "; do mkdir -p $$INSTALLDIR$$/include/$lib; cp $lib/*.h $$INSTALLDIR$$/include/$lib/; done",
        "mkdir -p $$INSTALLDIR$$/include/itf && cp itf/*.h $$INSTALLDIR$$/include/itf/",

        # "cp " + " ".join(kaldi_binaries) + " $$INSTALLDIR$$/bin/",
    ],
    out_include_dir = "include",
    out_lib_dir = "lib",
    # out_bin_dir = "bin",
    static_libraries = [
        "kaldi-" + lib + ".a"
        for lib in kaldi_libs
    ],
    deps = [
        "@openblas",
        "@openfst",
    ],
)
