load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")

licenses(["notice"])  # Apache 2.0

exports_files([
    "LICENSE",
])

buildifier(
    name = "buildifier",
)

COMMON_COPTS = [
    "-std=c++17",
]

cc_library(
    name = "tiro_speech",
    srcs = glob(
        [
            "src/**/*.cc",
            "src/**/*.h",
        ],
        exclude = ["src/bin/**"],
    ),
    copts = COMMON_COPTS,
    linkstatic = True,
    deps = [
        "//src/proto/tiro/speech/v1alpha:speech_cc_grpc",
        "//third_party/webrtc:webrtcvad",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_grpc_grpc//:grpc++_reflection",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_googleapis//google/rpc:error_details_cc_proto",
        "@ffmpeg",
        "@fmt",
        "@kaldi",
        "@spdlog",
    ],
)

cc_binary(
    name = "tiro_speech_server",
    srcs = [
        "src/bin/server_main.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":tiro_speech",
    ],
)

cc_binary(
    name = "tiro_speech_client",
    srcs = [
        "src/bin/client_main.cc",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_tiro_is_tiro_talgreinir_core//src/proto/tiro/speech/v1alpha:speech_cc_grpc",
        "@com_google_googleapis//google/rpc:error_details_cc_proto",
        "@com_google_googleapis//google/rpc:status_cc_proto",
    ],
)

load("@rules_proto_grpc//github.com/grpc-ecosystem/grpc-gateway:defs.bzl", "gateway_grpc_compile")

gateway_grpc_compile(
    name = "api_gateway_grpc",
    deps = ["@rules_proto_grpc//github.com/grpc-ecosystem/grpc-gateway/example/api:api_proto"],
)
