apiVersion: apps/v1
kind: Deployment
metadata:
  name: tiro-speech-core-deployment
  labels:
    app: tiro-speech-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tiro-speech-core
  template:
    metadata:
      labels:
        app: tiro-speech-core
    spec:
      initContainers:
      - name: fetch-models
        image: google/cloud-sdk:latest
        command:
        - bash
        - -xeu
        - -c
        - |
          mkdir -p /models/
          IS_IS=kaldi.chain.is-IS.sim_2021-04-21
          gsutil -m cp -r gs://models-talgreinir-is/is-IS/$IS_IS /models/
          mv /models/$IS_IS /models/is-IS
        volumeMounts:
        - name: models
          mountPath: /models
          readOnly: false
      containers:
      - name: speech-server
        image: tiro-speech-server
        imagePullPolicy: Always
        args:
        - --log-level=INFO
        - --kaldi-models=/models/is-IS
        - --listen-address=0.0.0.0:50051
        ports:
        - containerPort: 50051
          protocol: TCP
        volumeMounts:
        - mountPath: /models
          name: models
          readOnly: true
        resources:
          requests:
            memory: "2600Mi"
            cpu: "1000m"
      - name: restproxy
        image: tiro-speech-rest-gateway
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
        args:
        - -endpoint=localhost:50051
        - -logtostderr
        - -v=2
      - name: grpcwebproxy
        image: grpcwebproxy
        imagePullPolicy: Always
        ports:
        - containerPort: 8081
          protocol: TCP
        volumeMounts:
        - mountPath: /keys
          name: keys
          readOnly: true
        args:
        - --backend_addr=localhost:50051
        - --run_http_server=true
        - --run_tls_server=true
        - --server_http_debug_port=8081
        - --use_websockets=true
        - --allow_all_origins
        - --server_http_tls_port=8443
        - --server_tls_cert_file=/keys/server.crt
        - --server_tls_key_file=/keys/server.key
      volumes:
      - name: models
        emptyDir: {}
      - name: keys
        secret:
          secretName: internal-cert
